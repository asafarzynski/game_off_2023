[gd_resource type="VisualShader" load_steps=5 format=3 uid="uid://dk6a1qeecxahl"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_mbuvv"]
input_name = "color"

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_dgvul"]
default_input_values = [0, Quaternion(0, 0, 0, 0), 1, Quaternion(0, 0, 0, 0)]
op_type = 2
operator = 2

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_r5trd"]
parameter_name = "MainTexture"

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_xq4r0"]
source = 5

[resource]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_schlick_ggx;

uniform sampler2D MainTexture;



void fragment() {
// Input:2
	vec4 n_out2p0 = COLOR;


	vec4 n_out5p0;
// Texture2D:5
	n_out5p0 = texture(MainTexture, UV);


// VectorOp:3
	vec4 n_out3p0 = n_out2p0 * n_out5p0;


// Output:0
	ALBEDO = vec3(n_out3p0.xyz);


}
"
nodes/fragment/2/node = SubResource("VisualShaderNodeInput_mbuvv")
nodes/fragment/2/position = Vector2(-200, 220)
nodes/fragment/3/node = SubResource("VisualShaderNodeVectorOp_dgvul")
nodes/fragment/3/position = Vector2(160, 280)
nodes/fragment/4/node = SubResource("VisualShaderNodeTexture2DParameter_r5trd")
nodes/fragment/4/position = Vector2(-820, 420)
nodes/fragment/5/node = SubResource("VisualShaderNodeTexture_xq4r0")
nodes/fragment/5/position = Vector2(-340, 340)
nodes/fragment/connections = PackedInt32Array(2, 0, 3, 0, 4, 0, 5, 2, 5, 0, 3, 1, 3, 0, 0, 0)
